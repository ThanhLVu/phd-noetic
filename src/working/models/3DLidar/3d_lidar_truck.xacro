<?xml version="1.0"?>
<robot name="mp_700" xmlns:xacro="http://ros.org/wiki/xacro">

<!--========================================== Constants ============================================-->

    <xacro:property name="M_PI"   value="3.14159265359" />

<!--========================================== Materials ============================================-->

<material name="Neobotix/Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
</material>

<material name="Neobotix/Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
</material>

<material name="Neobotix/Green">
    <color rgba="0.0 0.8 0.0 1.0"/>
</material>

<material name="Neobotix/Grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
</material>

<material name="Neobotix/Grey2">
    <color rgba="0.9 0.9 0.9 1.0"/>
</material>

<material name="Neobotix/Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
</material>

<material name="Neobotix/White">
    <color rgba="1.0 1.0 1.0 1.0"/>
</material>

<material name="Neobotix/Yellow">
    <color rgba="1.0 1.0 0 1"/>
</material>

<material name="Neobotix/Aluminum">
    <color rgba="0.5 0.5 0.5 1"/>
</material>

<!--==================================== Gazebo Link References =====================================-->

<gazebo reference="base_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Gazebo/Grey"/>
</gazebo>

<gazebo reference="base_footprint">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Gazebo/Grey"/>
</gazebo>

<!--========================================= Base Macro ============================================-->

<!--The root link base_link has an inertia specified in the URDF,
    but KDL does not support a root link with an inertia. As a
    workaround, you can add an extra base_footprint link to your URDF. -->
<link name="base_footprint" />

<link name="base_link">
    <visual>
        <geometry>
          <mesh filename="package://working/models/Truck/MR_Roboto.dae"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
    </visual>
    <collision>
        <geometry>
          <mesh filename="package://working/models/Truck/MR_Roboto.dae"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0" />
    </collision>
    <inertial>
        <mass value="50" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="4" ixy="0.00" ixz="0.00"
                 iyx="0.00" iyy="8" iyz="0.00"
                 izx="0.00" izy="0.00" izz="5"/>
    </inertial>
    <static> true </static>
</link>

<joint name="base_footprint_joint" type="fixed">
   <parent link="base_footprint"/>
   <child  link="base_link"/>
   <origin xyz="0 0 0" rpy="0 0 0"/>
</joint>

<!--================================ Gazebo Sick Laser References ===================================-->

<gazebo reference="3d_lidar">
    <material value="Gazebo/Yellow"/>
    <sensor name="3d_lidar_sensor" type="ray">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>1024</samples>
                    <resolution>0.17</resolution>
                    <min_angle>-1.57</min_angle>
                    <max_angle>1.57</max_angle>
                </horizontal>
                <vertical>
                    <samples>128</samples>
                    <resolution>0.35</resolution>
                    <min_angle>-0.39</min_angle>
                    <max_angle>0.39</max_angle>
                </vertical>
            </scan>
            <range>
                <min>0.10</min>
                <max>30.0</max>
                <resolution>0.01</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
            </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
            <topicName>lidar3D/scan</topicName>
            <frameName>3d_lidar</frameName>
            <organize_cloud>false</organize_cloud>
            <min_range>0.10</min_range>
            <max_range>30.0</max_range>
            <gaussianNoise>0.008</gaussianNoise>
          </plugin>
    </sensor>
</gazebo>

<joint name="3d_lidar_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 ${M_PI/2} 0" xyz="0 0 8"/>
    <parent link="base_footprint"/>
    <child link="3d_lidar"/>
</joint>

<link name="3d_lidar" type="laser">
    <inertial>
        <mass value="0.001"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
        <origin rpy="0 0 0" xyz="-0.05 0 0"/>
        <geometry>
            <cylinder length="0.154" radius="0.05"/>
        </geometry>
        <material name="Neobotix/Yellow"/>
    </visual>
    <collision>
        <origin rpy="0 0 0" xyz="-0.05 0 0"/>
        <geometry>
            <cylinder length="0.15" radius="0.05"/>
        </geometry>
    </collision>
</link>

<!--================================ Gazebo Scuffed Camera References ===================================-->

<link name="camera_link">
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.1 0.1 0.1"/>
        </geometry>
    </collision>

    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="0.1 0.1 0.1"/>
        </geometry>
        <material name="red"/>
    </visual>
</link>

<joint name="camera_link_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 ${M_PI/2} 0" xyz="1 0 7"/>
    <parent link="base_footprint"/>
    <child link="camera_link"/>
</joint>

 <!-- camera -->
<gazebo reference="camera_link">
    <sensor type="camera" name="camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
        </image>
        <clip>
            <near>0.02</near>
            <far>300</far>
        </clip>
        <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
        </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
    </sensor>
</gazebo>

</robot>